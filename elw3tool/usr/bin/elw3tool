#!/usr/bin/python
# -*- coding: utf-8 -*-
# asoundrc tray icon and sound tester by Elw3
import gtk
from subprocess import call
class SystrayIconApp:
    def __init__(self):
        self.tray = gtk.StatusIcon()
        self.tray.set_from_icon_name('audio-volume-muted')
        self.tray.connect('popup-menu', self.on_right_click)
        self.tray.connect('activate', self.left)
        self.tray.set_tooltip(('nothing clicked so far'))


    def left(self,icon):
         call('speaker-test -Dplug:front -c2 -t sine -l 1 -f 2000 -b1 -P 2', shell=True)

    def on_right_click(self, icon, event_button, event_time):
        self.make_menu(event_button, event_time)

    def make_menu(self, event_button, event_time):
        menu = gtk.Menu()
        x= len(self.get())
        null= gtk.MenuItem(self.get()[0][22:45])
        null.show()
        menu.append(null)
        null.connect('activate',self.wechsel,self.get()[0][1],self.get()[0][22:55])
        if x > 1:
         null= gtk.MenuItem(self.get()[1][22:45])
         null.show()
         menu.append(null)
         null.connect('activate',self.wechsel,self.get()[1][1],self.get()[1][22:55])
        if x > 2:
         null= gtk.MenuItem(self.get()[2][22:45])
         null.show()
         menu.append(null)
         null.connect('activate',self.wechsel,self.get()[2][1],self.get()[2][22:55])
        if x > 3:
         null= gtk.MenuItem(self.get()[3][22:45])
         null.show()
         menu.append(null)
         null.connect('activate',self.wechsel,self.get()[3][1],self.get()[3][22:55])
        if x > 4:
         null= gtk.MenuItem(self.get()[4][22:45])
         null.show()
         menu.append(null)
         null.connect('activate',self.wechsel,self.get()[4][1],self.get()[5][22:55])
        test = gtk.MenuItem("Test at 100Hz")
        test.show()
        menu.append(test)
        test.connect('activate', self.testa)
        test = gtk.MenuItem("Test at 1000Hz")
        test.show()
        menu.append(test)
        test.connect('activate', self.testb)
        test = gtk.MenuItem("Test at 10000Hz")
        test.show()
        menu.append(test)
        test.connect('activate', self.testc)
        about = gtk.MenuItem("About")
        about.show()
        menu.append(about)
        about.connect('activate', self.show_about_dialog)
        quit = gtk.MenuItem("Quit")
        quit.show()
        menu.append(quit)
        quit.connect('activate', gtk.main_quit)
        menu.popup(None, None, gtk.status_icon_position_menu,
                   event_button, event_time, self.tray)
    def testa(m,b):
        call('speaker-test -Dplug:front -c2 -t sine -l 1 -f 100 -b1 -P 2', shell=True)
    def testb(m,b):
        call('speaker-test -Dplug:front -c2 -t sine -l 1 -f 1000 -b1 -P 2', shell=True)
    def testc(m,b):
        call('speaker-test -Dplug:front -c2 -t sine -l 1 -f 10000 -b1 -P 2', shell=True)
    def wechsel(self ,bone ,nr,name):
        call('echo "defaults.ctl.card '+nr+'\ndefaults.pcm.card '+nr+'\ndefaults.timer.card '+nr+'" > /home/$USER/.asoundrc', shell=True)
        self.tray.set_tooltip((name))
    def  show_about_dialog(self, widget):
        about_dialog = gtk.AboutDialog()
        about_dialog.set_destroy_with_parent (True)
        about_dialog.set_name('bla')
        about_dialog.set_version('version bl.a')
        about_dialog.set_copyright("by Elw3")
        about_dialog.set_authors(['what exacty are you looking for here?'])
        about_dialog.run()
        about_dialog.destroy()
    def get(x):
        list= open('/proc/asound/cards', 'r')
        bla=list.readlines()
        bla.insert(0,'')
        for x in bla:
         bla.remove(x)
        return(bla)
if __name__ == "__main__":
    SystrayIconApp()
    gtk.main()
